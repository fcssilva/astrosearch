{"remainingRequest":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/felipe/Área de Trabalho/teste-pratico/gitsearch/src/views/Perfil.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/src/views/Perfil.vue","mtime":1568715734935},{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/cache-loader/dist/cjs.js","mtime":1568675255378},{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/thread-loader/dist/cjs.js","mtime":1568675256236},{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/babel-loader/lib/index.js","mtime":1568675247780},{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/cache-loader/dist/cjs.js","mtime":1568675255378},{"path":"/home/felipe/Área de Trabalho/teste-pratico/gitsearch/node_modules/vue-loader/lib/index.js","mtime":1568675256452}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport Header from '@/components/Header'\n\nexport default {\n    components: {\n        Header\n    },\n    props: {\n        id: String \n    },\n    data() {\n        return {\n            userInfos: [],\n            userRepos: []\n        }\n    },\n    mounted() {\n        this.userInfo = []\n\n        if(!this.id.length)\n            return\n\n        // Buscar dados do usuário\n        axios\n            .get(`https://api.github.com/users/${this.id}`)\n            .then(response => this.userInfos = response.data)\n            .catch(error=>{\n                console.log(error)\n            })\n\n        axios\n            .get(`https://api.github.com/users/${ this.id }/repos`)\n            .then(response => this.sortByStars(response.data))\n            .catch(error => {\n                console.log(error)\n            })\n    },\n    methods: {\n        sortByStars(json) {\n            this.userRepos = json.sort((a, b) => b.stargazers_count - a.stargazers_count)\n        },\n        goToRepositorie(repoName) {\n            this.$router.push({ path: `/repositorie/${ this.id }/${ repoName }` })\n        }\n    }\n}\n",{"version":3,"sources":["Perfil.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Perfil.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"perfil\">\n        <Header />\n        <section class=\"user-info\">  \n            <div class=\"container row\">\n                <img class=\"user-info__logo\" :src=\"userInfos.avatar_url\">\n                \n                <div class=\"user-info__data col\">\n                    \n                    <h1 class=\"user-info__title\">\n                        {{ userInfos.login }}\n                    </h1>\n                    <p class=\"user-info__text\" v-if=\"userInfos.email\">\n                        {{ userInfos.email }}\n                    </p>\n                    <p class=\"user-info__text\" v-if=\"userInfos.bio\">\n                        {{ userInfos.bio }}\n                    </p>\n\n                    <div class=\"user-info__follows\">\n                        <p class=\"user-info__text\">\n                            Seguidores: {{ userInfos.followers }}\n                        </p>\n                        <p class=\"user-info__text\">\n                            Seguindo: {{ userInfos.following }}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"repositories\" v-if=\"userRepos.length\">\n            <div class=\"container\">\n                <h1 class=\"repositories__title\">\n                    Repositórios\n                </h1>\n\n                <div class=\"repositories__results\">\n                    <p>\n                        Exibindo {{ userRepos.length }} repositórios\n                    </p>\n                </div>\n\n                <ul class=\"repo-list\">\n                    <li class=\"repo-list__items\"\n                        v-for=\"(repo, index) in userRepos\" \n                        :key=\"index\" \n                        :class=\"`repo-list__element-${index}`\"\n                    >\n                        <div class=\"repo-list__head\">\n                            <h2 class=\"repo-list__text--white\">\n                                {{ repo.name }}\n                            </h2>\n                            <p class=\"repo-list__text repo-list__text--white\">\n                                <i class=\"far fa-star repo-list__text--white\"></i> \n                                {{ repo.stargazers_count }}\n                            </p>\n                        </div>\n\n                        <p class=\"repo-list__text\">\n                            {{ repo.description }}\n                        </p>\n\n                        <div class=\"repo-list__options\">\n                            <span class=\"repo-list__link\" @click=\"goToRepositorie(repo.name)\">Ver detalhes</span>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"repo-list\" v-else>\n            <div class=\"container\">\n                <h2 class=\"repo-list__subtitle\">\n                    Nenhum repositório encontrado para o usuário {{ userInfos.login }}\n                </h2>\n            </div>\n        </section>\n    </section>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Header from '@/components/Header'\n\nexport default {\n    components: {\n        Header\n    },\n    props: {\n        id: String \n    },\n    data() {\n        return {\n            userInfos: [],\n            userRepos: []\n        }\n    },\n    mounted() {\n        this.userInfo = []\n\n        if(!this.id.length)\n            return\n\n        // Buscar dados do usuário\n        axios\n            .get(`https://api.github.com/users/${this.id}`)\n            .then(response => this.userInfos = response.data)\n            .catch(error=>{\n                console.log(error)\n            })\n\n        axios\n            .get(`https://api.github.com/users/${ this.id }/repos`)\n            .then(response => this.sortByStars(response.data))\n            .catch(error => {\n                console.log(error)\n            })\n    },\n    methods: {\n        sortByStars(json) {\n            this.userRepos = json.sort((a, b) => b.stargazers_count - a.stargazers_count)\n        },\n        goToRepositorie(repoName) {\n            this.$router.push({ path: `/repositorie/${ this.id }/${ repoName }` })\n        }\n    }\n}\n</script>\n\n<style>\n.user-info {\n    background-color: #f9f9f9;\n}\n\n.user-info__data {\n    max-width: 50%;\n    padding: 10px;\n    justify-content: space-between;\n}\n\n.user-info__logo {\n    height: 150px;\n    width: 150px;\n    padding: 30px;\n    padding-left: 0;\n}\n\n.user-info__title {\n    background-color: #48335d;\n    padding: 10px;\n    color: #fff;\n}\n\n.user-info__title,\n.user-info__text {\n    margin: 10px 0;\n}\n\n.user-info__follows {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    max-width: 300px;\n    margin: 0px;\n    padding: 0px;\n}\n\n.repositories__results {\n    text-align: center;\n}\n\n.repo-list {\n    list-style: none;\n    width: 100%;\n    margin: 0px;\n    padding: 0px;\n}\n\n.repo-list__text {\n    margin: 10px;\n    word-wrap: break-word;\n}\n\n.repo-list__text--white {\n    color: #fff;\n    width: 100%;\n    word-wrap: break-word;\n}\n\n.repo-list__head {\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding: 0 10px;\n    color: #FFF;\n    background-color: #48335d;\n}\n\n.repo-list__items {\n    padding: 10px;\n    margin: 20px 10px 0;\n    box-shadow: 0 1px 5px #48335d;\n}\n\n.repo-list__title {\n    font-size: 2rem;\n    margin-bottom: 10px;\n    word-wrap: break-word;\n}\n\n.repo-list__subtitle {\n    margin-bottom: 10px;\n    font-size: 1.2rem;\n}\n\n.repo-list__options {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    margin-top: 20px;\n}\n\n.repo-list__link {\n    padding: 10px 20px;\n    margin: 1px;\n    background-color: #48335d;\n    color: #FFF;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n\n@media (max-width: 360px) {\n    .user-info__data { align-items: center; text-align: center}\n    .user-info__follows {justify-content: center}\n    .user-info__logo { padding: 30px }\n    .repo-list__head { flex-direction: column-reverse; justify-content: center; }\n    .repo-list__options { flex-direction: column; align-items: center; text-align: center }\n    .repo-list__link { width: calc(100% - 40px) }\n}\n\n/* @media (min-width: 361px) {\n    .container { max-width: 100% }\n    .repo-list { display: flex; flex-direction: row; flex-wrap: wrap; width: 100%}\n    .repo-list__items { width: calc(50% - 60px) }\n} */\n</style>"]}]}